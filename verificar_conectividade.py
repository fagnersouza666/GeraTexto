#!/usr/bin/env python3
"""
Script de Verifica√ß√£o de Conectividade - GeraTexto Bot (Vers√£o Simplificada)
Verifica conectividade b√°sica sem ser restritivo
"""

import socket
import sys
import os
from datetime import datetime

# Importa√ß√£o condicional do requests
try:
    import requests

    REQUESTS_DISPONIVEL = True
except ImportError:
    REQUESTS_DISPONIVEL = False
    print("‚ö†Ô∏è M√≥dulo requests n√£o dispon√≠vel, pulando testes HTTP")


def verificar_dns(host="google.com", port=80):
    """Verifica se consegue resolver DNS"""
    try:
        socket.gethostbyname(host)
        return True, f"‚úÖ DNS OK - {host} resolvido"
    except socket.gaierror as e:
        return False, f"‚ö†Ô∏è DNS com problema - {e} (pode ainda funcionar)"


def verificar_http_simples(url="https://httpbin.org/get"):
    """Verifica conectividade HTTP de forma simples"""
    if not REQUESTS_DISPONIVEL:
        return True, "‚ö†Ô∏è HTTP n√£o testado (requests indispon√≠vel)"

    try:
        response = requests.get(url, timeout=5)
        return True, f"‚úÖ HTTP OK - Status {response.status_code}"
    except Exception as e:
        return False, f"‚ö†Ô∏è HTTP com problema - {e} (pode ainda funcionar)"


def verificar_variaveis_ambiente():
    """Verifica se as vari√°veis de ambiente necess√°rias est√£o definidas"""
    vars_necessarias = ["TELEGRAM_TOKEN", "OPENAI_API_KEY", "OPENAI_MODEL"]
    resultados = []

    for var in vars_necessarias:
        valor = os.getenv(var)
        if valor:
            resultados.append(f"‚úÖ {var}: Definida")
        else:
            resultados.append(f"‚ùå {var}: N√ÉO DEFINIDA")

    return resultados


def main():
    print("üîç GeraTexto Bot - Verifica√ß√£o Simplificada")
    print("=" * 50)
    print(f"üïê Data/Hora: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # Verificar vari√°veis de ambiente
    print("üìã Vari√°veis de Ambiente:")
    vars_ok = True
    for resultado in verificar_variaveis_ambiente():
        print(f"  {resultado}")
        if "‚ùå" in resultado:
            vars_ok = False
    print()

    if not vars_ok:
        print("‚ùå VARI√ÅVEIS DE AMBIENTE FALTANDO!")
        print("   Verifique o arquivo .env")
        sys.exit(1)

    # Verificar conectividade b√°sica (n√£o restritiva)
    print("üåê Testes B√°sicos de Conectividade:")

    dns_ok, dns_msg = verificar_dns()
    print(f"  {dns_msg}")

    if REQUESTS_DISPONIVEL:
        http_ok, http_msg = verificar_http_simples()
        print(f"  {http_msg}")
    else:
        print("  ‚ö†Ô∏è Testes HTTP pulados (requests n√£o dispon√≠vel)")

    print()
    print("=" * 50)
    print("üí° CONECTIVIDADE VERIFICADA!")
    print("   O bot tentar√° se conectar independentemente dos resultados.")
    print("   Problemas de rede podem ser tempor√°rios.")
    print()
    print("üìã Para monitorar:")
    print("   docker logs -f geratexto-bot")
    sys.exit(0)


if __name__ == "__main__":
    main()
